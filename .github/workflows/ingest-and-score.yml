name: Ingest iNaturalist Data and Score

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  data-pipeline:
    name: Fetch, Ingest, and Process Data
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js LTS (v20)
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        # Ensures 'dotenv' is installed (verify package.json includes it)
        run: npm install

      # =================================================================
      # .env Synthesis (Precise Quoting) - This configuration was correct.
      # =================================================================
      - name: Create .env file from Secrets (Precise Quoting)
        run: |
          echo "Synthesizing .env file at $(pwd)/.env"

          # Capture secrets into local variables
          S_URL="${{ secrets.SUPABASE_URL }}"
          SERVICE_KEY="${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}"
          ANON_KEY="${{ secrets.SUPABASE_ANON_KEY }}"
          POOLER_URL="${{ secrets.SUPABASE_POOL_URL }}"

          # --- Supabase SDK Variables (Quoted) ---
          printf "SUPABASE_URL=\"%s\"\n" "$S_URL" > .env
          printf "SUPABASE_SERVICE_ROLE_KEY=\"%s\"\n" "$SERVICE_KEY" >> .env
          printf "SUPABASE_ANON_KEY=\"%s\"\n" "$ANON_KEY" >> .env
          printf "NEXT_PUBLIC_SUPABASE_URL=\"%s\"\n" "$S_URL" >> .env
          printf "NEXT_PUBLIC_SUPABASE_ANON_KEY=\"%s\"\n" "$ANON_KEY" >> .env
          printf "VITE_SUPABASE_URL=\"%s\"\n" "$S_URL" >> .env
          printf "VITE_SUPABASE_ANON_KEY=\"%s\"\n" "$ANON_KEY" >> .env
          printf "SUPABASE_KEY=\"%s\"\n" "$SERVICE_KEY" >> .env

          # --- Database Connection Variables (Quoted) ---
          printf "SUPABASE_DB_URL=\"%s\"\n" "$POOLER_URL" >> .env
          printf "DATABASE_URL=\"%s\"\n" "$POOLER_URL" >> .env
          printf "POSTGRES_URL=\"%s\"\n" "$POOLER_URL" >> .env

          # --- iNaturalist Variables (Quoted) ---
          printf "INAT_BASE=\"%s\"\n" "${{ secrets.INAT_BASE }}" >> .env
          printf "ASSIGNMENT_IDS=\"%s\"\n" "${{ secrets.ASSIGNMENT_IDS }}" >> .env

          # --- Application variables (UNQUOTED) ---
          printf "RATE_LIMIT_RPS=%s\n" "${{ secrets.RATE_LIMIT_RPS }}" >> .env
          printf "NODE_ENV=production\n" >> .env

          echo ".env file created successfully."

      # =================================================================
      # CRITICAL FIX: Explicitly Specify .env Path and Control Loading Order
      # We eliminate ambiguity by configuring dotenv with the absolute path
      # to the .env file before dynamically importing the main module.
      # =================================================================
      - name: Run Data Ingestion
        run: |
          # Execute an inline script to configure dotenv explicitly and then import the main module.
          node -e '
            // 1. Configure dotenv with the absolute path provided via ENV_PATH environment variable.
            // This uses CommonJS require as it is more reliable for configuration setup.
            require("dotenv").config({ path: process.env.ENV_PATH });

            // 2. Dynamically import the main ES Module.
            // This ensures configuration is loaded into process.env before the module initializes.
            // Note: This assumes ingest.mjs is at the root. If it is in a subdirectory (e.g., src/),
            // the path must be adjusted (e.g., import("./src/ingest.mjs")).
            import("./ingest.mjs");
          '
        env:
          # Pass the absolute path to the Node.js process using github.workspace context
          ENV_PATH: ${{ github.workspace }}/.env
