name: Ingest iNaturalist Data and Score

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  data-pipeline:
    name: Fetch, Ingest, and Process Data
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js LTS (v20)
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        # Ensures 'dotenv' is installed
        run: npm install

      # =================================================================
      # CRITICAL FIX: Precise .env Synthesis (Selective Quoting)
      # The application ignores direct injection and requires a .env file.
      # We must quote complex secrets (URLs, Keys) but MUST NOT quote simple values (NODE_ENV).
      # =================================================================
      - name: Create .env file from Secrets (Precise Quoting)
        run: |
          echo "Synthesizing .env file with precise quoting..."

          # Capture secrets into local variables
          S_URL="${{ secrets.SUPABASE_URL }}"
          SERVICE_KEY="${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}"
          ANON_KEY="${{ secrets.SUPABASE_ANON_KEY }}"
          POOLER_URL="${{ secrets.SUPABASE_POOL_URL }}"

          # --- Supabase SDK Variables (Quoted) ---
          # Format: KEY="VALUE"
          printf "SUPABASE_URL=\"%s\"\n" "$S_URL" > .env
          printf "SUPABASE_SERVICE_ROLE_KEY=\"%s\"\n" "$SERVICE_KEY" >> .env
          printf "SUPABASE_ANON_KEY=\"%s\"\n" "$ANON_KEY" >> .env
          printf "NEXT_PUBLIC_SUPABASE_URL=\"%s\"\n" "$S_URL" >> .env
          printf "NEXT_PUBLIC_SUPABASE_ANON_KEY=\"%s\"\n" "$ANON_KEY" >> .env
          printf "VITE_SUPABASE_URL=\"%s\"\n" "$S_URL" >> .env
          printf "VITE_SUPABASE_ANON_KEY=\"%s\"\n" "$ANON_KEY" >> .env
          printf "SUPABASE_KEY=\"%s\"\n" "$SERVICE_KEY" >> .env

          # --- Database Connection Variables (Quoted) ---
          printf "SUPABASE_DB_URL=\"%s\"\n" "$POOLER_URL" >> .env
          printf "DATABASE_URL=\"%s\"\n" "$POOLER_URL" >> .env
          printf "POSTGRES_URL=\"%s\"\n" "$POOLER_URL" >> .env

          # --- iNaturalist Variables (Quoted, assuming complexity) ---
          printf "INAT_BASE=\"%s\"\n" "${{ secrets.INAT_BASE }}" >> .env
          printf "ASSIGNMENT_IDS=\"%s\"\n" "${{ secrets.ASSIGNMENT_IDS }}" >> .env

          # --- Application variables (CRITICAL: UNQUOTED) ---
          # Format: KEY=VALUE
          # Assuming RATE_LIMIT_RPS is a simple number
          printf "RATE_LIMIT_RPS=%s\n" "${{ secrets.RATE_LIMIT_RPS }}" >> .env
          # NODE_ENV must be unquoted for correct behavior in many applications
          printf "NODE_ENV=production\n" >> .env

          echo ".env file created successfully."

      # =================================================================
      # Execution Step (Using forced preloading)
      # We use the Node.js '-r' flag to preload 'dotenv/config'.
      # This forces the correctly synthesized .env file to be loaded.
      # =================================================================
      - name: Run Data Ingestion
        run: node -r dotenv/config ingest.mjs
