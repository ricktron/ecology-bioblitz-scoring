name: Ingest iNaturalist Data and Score

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  data-pipeline:
    name: Fetch, Ingest, and Process Data
    runs-on: ubuntu-latest
    timeout-minutes: 30
    # Ensure no 'environment:' is specified here, so it uses Repository Secrets.

    # =================================================================
    # CRITICAL BLOCK: Must be indented correctly under the job definition.
    # =================================================================
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_POOL_URL }}
      INAT_BASE: ${{ secrets.INAT_BASE }}
      ASSIGNMENT_IDS: ${{ secrets.ASSIGNMENT_IDS }}
      RATE_LIMIT_RPS: ${{ secrets.RATE_LIMIT_RPS }}
      NODE_ENV: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js LTS (v20)
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      # =================================================================
      # FORENSIC DIAGNOSTIC STEP
      # This checks the environment in the shell (Bash) before Node.js runs.
      # =================================================================
      - name: Forensic Environment Diagnosis
        run: |
          echo "Running environment diagnostics in the shell (Bash)..."

          # Check SUPABASE_URL
          if [ -z "$SUPABASE_URL" ]; then
            echo "::error::DIAGNOSIS FAILURE: SUPABASE_URL is EMPTY or NULL in the Bash environment."
            echo "Potential Causes:"
            echo "1. The 'env:' block in this YAML file is missing or incorrectly indented."
            echo "2. The Repository Secret 'SUPABASE_URL' is empty."
            echo "3. The job is referencing an 'environment:' that does not contain this secret."
            exit 1
          else
            echo "DIAGNOSIS SUCCESS: SUPABASE_URL is present in Bash (value masked)."
          fi

          # Check SUPABASE_SERVICE_ROLE_KEY
          if [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
            echo "::error::DIAGNOSIS FAILURE: SUPABASE_SERVICE_ROLE_KEY is EMPTY or NULL in Bash."
            exit 1
          else
             echo "DIAGNOSIS SUCCESS: SUPABASE_SERVICE_ROLE_KEY is present in Bash (value masked)."
          fi

           # Check SUPABASE_DB_URL
           if [ -z "$SUPABASE_DB_URL" ]; then
            echo "::error::DIAGNOSIS FAILURE: SUPABASE_DB_URL is EMPTY or NULL in Bash. Check the 'SUPABASE_POOL_URL' secret."
            exit 1
          else
             echo "DIAGNOSIS SUCCESS: SUPABASE_DB_URL is present in Bash (value masked)."
          fi

          echo "Diagnosis Complete: All critical environment variables are successfully injected into the shell."
      # =================================================================

      - name: Run Data Ingestion
        run: node ingest.mjs
