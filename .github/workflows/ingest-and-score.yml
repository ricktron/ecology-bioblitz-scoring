name: Ingest iNat and Score â€¢ vENVDEBUG

on:
  workflow_dispatch:
  schedule:
    - cron: "*/30 * * * *"
  push:
    paths:
      - .github/workflows/ingest-and-score.yml
      - ingest.mjs
      - sql/**

permissions:
  contents: read

concurrency:
  group: ingest-and-score
  cancel-in-progress: true

jobs:
  ingest-and-score:
    runs-on: ubuntu-latest

    env:
      # Supabase HTTP API (used by ingest.mjs)
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      # iNat / runtime (if your script uses them)
      INAT_BASE: ${{ secrets.INAT_BASE }}
      ASSIGNMENT_IDS: ${{ secrets.ASSIGNMENT_IDS }}
      RATE_LIMIT_RPS: ${{ secrets.RATE_LIMIT_RPS }}
      # Postgres for psql (views)
      SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}      # 5432 URI with ?sslmode=require
      SUPABASE_POOL_URL: ${{ secrets.SUPABASE_POOL_URL }}  # optional 6543 pooler URI

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps (ok if none)
        run: |
          set -e
          if [ -f package-lock.json ]; then npm ci
          elif [ -f package.json ]; then npm i
          else echo "No package.json found; skipping"
          fi

      # --- Export to GITHUB_ENV so every later shell (and Node) definitely sees them ---
      - name: Export API env (explicit)
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> "$GITHUB_ENV"
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> "$GITHUB_ENV"
          echo "INAT_BASE=${{ secrets.INAT_BASE }}" >> "$GITHUB_ENV"
          echo "ASSIGNMENT_IDS=${{ secrets.ASSIGNMENT_IDS }}" >> "$GITHUB_ENV"
          echo "RATE_LIMIT_RPS=${{ secrets.RATE_LIMIT_RPS }}" >> "$GITHUB_ENV"

      # --- Shell-level confirmation (masked) ---
      - name: Debug (shell): API secrets presence
        run: |
          test -n "${SUPABASE_URL:-}" && echo "SUPABASE_URL: SET" || echo "SUPABASE_URL: EMPTY"
          test -n "${SUPABASE_SERVICE_ROLE_KEY:-}" && echo "SUPABASE_SERVICE_ROLE_KEY: SET" || echo "SUPABASE_SERVICE_ROLE_KEY: EMPTY"
          test -n "${INAT_BASE:-}" && echo "INAT_BASE: SET" || echo "INAT_BASE: EMPTY"
          test -n "${ASSIGNMENT_IDS:-}" && echo "ASSIGNMENT_IDS: SET" || echo "ASSIGNMENT_IDS: EMPTY"
          test -n "${RATE_LIMIT_RPS:-}" && echo "RATE_LIMIT_RPS: SET" || echo "RATE_LIMIT_RPS: EMPTY"

      # --- Node-level confirmation (booleans only) ---
      - name: Debug (node): does Node see the env?
        run: |
          node -e "console.log('Node sees SUPABASE_URL?', !!process.env.SUPABASE_URL, 'SUPABASE_SERVICE_ROLE_KEY?', !!process.env.SUPABASE_SERVICE_ROLE_KEY)"

      # --- Ingest ---
      - name: Run iNat ingestion script
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          INAT_BASE:_
