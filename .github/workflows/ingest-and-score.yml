name: Ingest iNaturalist Data and Score

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  data-pipeline:
    name: Fetch, Ingest, and Process Data
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # Job-level env for general settings only (if any). Secrets are moved to the step level.
    env:
      NODE_ENV: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js LTS (v20)
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      # =================================================================
      # DIAGNOSTIC: Verify Node.js Environment Perspective
      # This confirms that a standard Node.js process can see the variables
      # when explicitly injected at the step level.
      # =================================================================
      - name: Forensic Environment Diagnosis (Node.js)
        run: |
          echo "Checking environment inside a controlled Node.js process..."
          node -e '
            const url = process.env.SUPABASE_URL;
            const key = process.env.SUPABASE_SERVICE_ROLE_KEY;
            if (!url || !key) {
              console.error("::error::NODE.JS DIAGNOSIS FAILURE: Variables missing even with explicit step injection. This indicates a severe runner issue.");
              process.exit(1);
            } else {
              console.log("NODE.JS DIAGNOSIS SUCCESS: Variables are visible to Node.js via explicit injection.");
            }
          '
        # Explicit injection for the diagnostic step
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      # =================================================================
      # CRITICAL FIX: Step-Level Environment Injection
      # We explicitly inject the environment variables directly into this step.
      # =================================================================
      - name: Run Data Ingestion
        run: node ingest.mjs
        env:
          # Supabase API Access
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

          # Database Connection String (Using the working Pooler URL)
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_POOL_URL }}

          # iNaturalist Configuration
          INAT_BASE: ${{ secrets.INAT_BASE }}
          ASSIGNMENT_IDS: ${{ secrets.ASSIGNMENT_IDS }}

          # Application Settings
          RATE_LIMIT_RPS: ${{ secrets.RATE_LIMIT_RPS }}
