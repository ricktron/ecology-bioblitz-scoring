# .github/workflows/ingest-and-score.yml
name: Ingest & Score

on:
  workflow_dispatch:
  schedule:
    - cron: "*/15 * * * *"

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      # Required
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY != '' && secrets.SUPABASE_SERVICE_KEY || secrets.SUPABASE_SERVICE_ROLE_KEY }}
      INAT_PROJECT_SLUG: ${{ secrets.INAT_PROJECT_SLUG }}

      # Mode + filters
      INAT_MODE: ${{ secrets.INAT_MODE }}
      DEMO_D1: ${{ secrets.DEMO_D1 }}
      DEMO_D2: ${{ secrets.DEMO_D2 }}
      DEMO_BBOX: ${{ secrets.DEMO_BBOX }}
      DEMO_USER_LOGINS: ${{ secrets.DEMO_USER_LOGINS }}
      TRIP_D1: ${{ secrets.TRIP_D1 }}
      TRIP_D2: ${{ secrets.TRIP_D2 }}
      TRIP_BBOX: ${{ secrets.TRIP_BBOX }}

      # Optional alerting webhook
      ALERT_WEBHOOK_URL: ${{ secrets.ALERT_WEBHOOK_URL }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Validate required env
        shell: bash
        run: |
          set -euo pipefail
          ok=1
          for v in SUPABASE_URL SUPABASE_SERVICE_KEY INAT_PROJECT_SLUG; do
            val="${!v:-}"
            if [ -z "$val" ]; then
              echo "::error::Missing $v"
              ok=0
            else
              echo "$v: present (len=${#val})"
            fi
          done
          [ "$ok" = "1" ] || exit 1

      - name: Install deps (deterministic)
        run: npm ci

      - name: Verify config_filters row exists
        shell: bash
        run: |
          set -euo pipefail
          r=$(curl -sS -H "apikey: $SUPABASE_SERVICE_KEY" -H "Authorization: Bearer $SUPABASE_SERVICE_KEY" \
              "$SUPABASE_URL/rest/v1/config_filters?id=is.true&select=id")
          echo "config_filters lookup: $r"
          echo "$r" | grep -q "true" || (echo "::error::No active config_filters row in DB"; exit 1)

      - name: Run ingest
        run: node ingest.mjs

      - name: Job summary
        if: success()
        run: echo "✅ Ingest succeeded at $(date -u)" >> $GITHUB_STEP_SUMMARY

      - name: Notify on failure (webhook)
        if: failure() && env.ALERT_WEBHOOK_URL != ''
        shell: bash
        run: |
          payload='{"text":"❌ EcoQuest ingest failed: '"$GITHUB_REPOSITORY"' run '"$GITHUB_RUN_ID"' commit '"$GITHUB_SHA"'"}'
          curl -sS -X POST -H 'Content-Type: application/json' -d "$payload" "$ALERT_WEBHOOK_URL"
