name: Ingest iNaturalist → Supabase

on:
  workflow_dispatch:
    inputs:
      run_mode:
        description: 'Mode: TRIP or FULL'
        default: 'TRIP'
        required: false

concurrency:
  group: ingest-inat-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  ingest:
    runs-on: ubuntu-24.04
    timeout-minutes: 120

    env:
      # Supabase
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      SUPABASE_SECRET_KEY: ${{ secrets.SUPABASE_SECRET_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

      # Inat + ingest options (use repo/environment VARIABLES)
      INAT_PROJECT_SLUG: ${{ vars.INAT_PROJECT_SLUG }}
      INAT_MODE: ${{ vars.INAT_MODE }}
      TRIP_D1: ${{ vars.TRIP_D1 }}
      TRIP_D2: ${{ vars.TRIP_D2 }}
      TRIP_BBOX: ${{ vars.TRIP_BBOX }}
      OBS_TABLE: ${{ vars.OBS_TABLE }}
      OBS_ID_COLUMN: ${{ vars.OBS_ID_COLUMN }}
      OBS_UPDATED_AT_COLUMN: ${{ vars.OBS_UPDATED_AT_COLUMN }}
      SKIP_DELETES: ${{ vars.SKIP_DELETES }}
      UPSERT_BATCH_SIZE: ${{ vars.UPSERT_BATCH_SIZE }}
      ALERT_WEBHOOK_URL: ${{ secrets.ALERT_WEBHOOK_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Environment Check
        shell: bash
        run: |
          set -euo pipefail
          echo '=== Environment Check ==='
          ok=1

          # Required vars
          for v in SUPABASE_URL INAT_PROJECT_SLUG; do
            val="${!v:-}"
            if [ -z "$val" ]; then
              echo "::error::Missing $v"; ok=0
            else
              echo "$v: present (len=${#val})"
            fi
          done

          # At least one Supabase key
          if [ -z "${SUPABASE_SERVICE_KEY:-}${SUPABASE_SECRET_KEY:-}${SUPABASE_SERVICE_ROLE_KEY:-}" ]; then
            echo "::error::Missing Supabase key (need SUPABASE_SERVICE_KEY or SUPABASE_SECRET_KEY or SUPABASE_SERVICE_ROLE_KEY)"
            ok=0
          else
            echo "Supabase key: present"
          fi

          [ "$ok" = "1" ] || exit 1

      - name: Supabase Reachability Test
        shell: bash
        run: |
          set -euo pipefail
          echo '=== Supabase Reachability Test ==='
          K="${SUPABASE_SERVICE_KEY:-${SUPABASE_SECRET_KEY:-${SUPABASE_SERVICE_ROLE_KEY:-}}}"
          URL="$SUPABASE_URL/rest/v1/config_filters?select=id&limit=1"
          echo "GET $URL"
          r=$(curl -sS -w '
%{http_code}'             -H "apikey: $K"             -H "Authorization: Bearer $K"             "$URL" || true)
          code="${r##*$'\n'}"
          body="${r%$'\n'*}"
          echo "http $code body: $body"
          if [ "${code:-000}" -ge 400 ]; then
            echo "::error::Supabase API unreachable"; exit 1
          fi
          echo '✓ Supabase API reachable'

      - name: Install deps (if present)
        shell: bash
        run: |
          set -e
          if [ -f package.json ]; then
            npm ci --ignore-scripts
          fi

      - name: Ingest with retries
        shell: bash
        run: |
          set -e
          for i in 1 2 3; do
            if stdbuf -oL -eL node ingest.mjs | tee /dev/stderr; then
              echo '✅ ingest ok'
              exit 0
            fi
            if [ $i -lt 3 ]; then
              sleep_sec=$(( (RANDOM % 7 + 5) * i ))
              echo "⚠️  transient failure, retry #$i (sleeping ${sleep_sec}s)"
              sleep $sleep_sec
            fi
          done
          echo '::error::Ingest failed after 3 attempts'
          exit 1
